{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description" : "content-authorisation-proxy-app",
    "Parameters" : {
        "VpcId" : {
            "Type" : "String",
            "Description" : "VpcId of your existing Virtual Private Cloud (VPC)",
            "Default" : "vpc-e905ae8c"
        },
        "Subnets" : {
            "Type" : "CommaDelimitedList",
            "Description" : "The list of SubnetIds in your Virtual Private Cloud (VPC)",
            "Default" : "subnet-b3931cc4, subnet-fee4839b, subnet-cde44494"
        },
        "Stack": {
            "Type": "String",
            "Description": "Applied directly as a tag",
            "Default" : "subscriptions"
        },
        "KeyName" : {
            "Description" : "The EC2 Key Pair to allow SSH access to the instance",
            "Type" : "String",
            "Default" : "aws-subscriptions"
        },
        "Stage": {
            "Type" : "String",
            "Description" : "Applied directly as a tag",
            "Default": "PROD",
            "AllowedValues": [ "CODE", "PROD" ]
        }
    },
    "Mappings": {
        "CollectorDomainName": {
            "PROD": {
                "HostedZoneName": "cas-beta.guardianapis.com.",
                "DomainName": "cas-beta.guardianapis.com.",
                "CertificateName": "sites.guardian.co.uk"
            }
        }
    },
    "Resources" : {

        "CASProxyAutoScalingGroup" : {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "VPCZoneIdentifier" : { "Ref" : "Subnets" },
                "LaunchConfigurationName" : { "Ref" : "CASProxyLaunchConfig" },
                "MinSize" : "3",
                "MaxSize" : "6",
                "LoadBalancerNames" : [ { "Ref" : "CASProxyElasticLoadBalancer" } ],
                "HealthCheckType" : "ELB",
                "HealthCheckGracePeriod" : 300,
                "Tags" : [
                    { "Key" : "Stack", "Value" : { "Ref" : "Stack" }, "PropagateAtLaunch" : "true" },
                    { "Key" : "App", "Value" : "content-authorisation-proxy", "PropagateAtLaunch" : "true" },
                    { "Key" : "Stage", "Value" : { "Ref" : "Stage" }, "PropagateAtLaunch" : "true"  }
                ]
            }
        },

        "CASProxyLaunchConfig" : {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Properties" : {
                "ImageId" : "ami-914924e6",
                "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
                "InstanceType" : "t2.micro",
                "KeyName" : { "Ref" : "KeyName" },
                "IamInstanceProfile": { "Ref" : "SubscriptionsAppInstanceProfile" },
                "AssociatePublicIpAddress": true,
                "UserData" : { "Fn::Base64": {
                    "Fn::Join":["\n", [
                        "#!/bin/bash -ev",

                        "CONF_DIR=/subscriptions/content-authorisation-proxy-0.1/conf",

                        {"Fn::Join":["", ["wget -N --directory-prefix=/home/ubuntu/.ssh https://s3-eu-west-1.amazonaws.com/subscriptions-dist/", { "Ref" : "Stack" }, "/authorized_keys &"]]},

                        "apt-get -y update",

                        {"Fn::Join":["", ["echo https://s3-eu-west-1.amazonaws.com/subscriptions-dist/", { "Ref" : "Stack" }, "/", { "Ref" : "Stage" }, "/content-authorisation-proxy/content-authorisation-proxy-0.1.zip > /etc/gu-artifact-url" ]]},

                        "adduser --system --home /subscriptions --disabled-password subscriptions",

                        "wget -i /etc/gu-artifact-url --directory-prefix=/tmp",

                        "unzip -d /subscriptions /tmp/content-authorisation-proxy-0.1.zip",

                        "mkdir /etc/gu",

                        "wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py",

                        {"Fn::Join": ["", ["sed -i",
                            " -e \"s/__DATE/$(date +%F)/\"",
                            " -e 's/__STAGE/", { "Ref": "Stage" }, "/'",
                            " $CONF_DIR/logger.conf"]]},

                        {"Fn::Join": [" ", ["python awslogs-agent-setup.py -nr", { "Ref": "AWS::Region" }, "-c $CONF_DIR/logger.conf" ]]},

                        {"Fn::Join":["", ["sed 's/__STAGE/", { "Ref" : "Stage" } ,"/' $CONF_DIR/upstart.conf > /etc/init/content-authorisation-proxy-app.conf"]]},

                        "chown -R subscriptions /subscriptions/",

                        "start content-authorisation-proxy-app"
                    ]]
                }}
            }
        },

        "SubscriptionsAppRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties":{
                "Path":"/",
                "AssumeRolePolicyDocument": {
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": { "Service": [ "ec2.amazonaws.com" ] },
                        "Action": [ "sts:AssumeRole" ]
                    }]
                },
                "Policies": [
                {
                    "PolicyName": "PrivateBucket",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": "s3:GetObject",
                                "Resource": "arn:aws:s3:::subscriptions-private/*"
                            }
                        ]
                    }
                },
                {
                    "PolicyName": "PushLogs",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": ["logs:*"],
                            "Resource": ["arn:aws:logs:*:*:*"]
                        }]
                    }
                },
                {
                    "PolicyName": "PushMetrics",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement":[{
                            "Effect":"Allow",
                            "Action":["cloudwatch:PutMetricData"],
                            "Resource":"*"
                        }
                        ]
                    }
                }]
            }
        },
        "SubscriptionsAppInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ {
                    "Ref": "SubscriptionsAppRole"
                } ]
            }
        },

        "CASProxyElasticLoadBalancer" : {
            "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties" : {
                "Listeners" : [ {
                    "LoadBalancerPort": "443",
                    "InstancePort": 9300,
                    "Protocol": "HTTPS",
                    "SSLCertificateId" : { "Fn::Join" : [ "", [ "arn:aws:iam::", {"Ref":"AWS::AccountId"}, ":server-certificate/", { "Fn::FindInMap": ["CollectorDomainName", {"Ref": "Stage" }, "CertificateName"]} ] ] }
                }],
                "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
                "Subnets" : { "Ref" : "Subnets" },
                "HealthCheck" : {
                    "Target" : "HTTP:9300/healthcheck",
                    "HealthyThreshold" : "2",
                    "UnhealthyThreshold" : "2",
                    "Interval" : "10",
                    "Timeout" : "5"
                },
                "ConnectionDrainingPolicy": {
                    "Enabled" : "true",
                    "Timeout" : "60"
                }
            }
        },
        "LoadBalancerSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Permit incoming HTTP access on port 80, egress to port 9300",
                "VpcId" : { "Ref" : "VpcId" },
                "SecurityGroupIngress" : [
                    { "IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": "0.0.0.0/0"}
                ],
                "SecurityGroupEgress" : [
                    { "IpProtocol": "tcp", "FromPort": "9300", "ToPort": "9300", "CidrIp": "0.0.0.0/0" }
                ]
            }
        },
        "InstanceSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Open up SSH access and enable HTTP access on the configured port",
                "VpcId" : { "Ref" : "VpcId" },
                "SecurityGroupIngress" : [
                    { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "77.91.248.0/21" },
                    { "IpProtocol": "tcp", "FromPort": "9300", "ToPort": "9300", "CidrIp": "77.91.248.0/21" },
                    { "IpProtocol": "tcp", "FromPort": "9300", "ToPort": "9300", "SourceSecurityGroupId" : { "Ref" : "LoadBalancerSecurityGroup" } }
                ]
            }
        },
        "CASProxyELBDNSrecord" : {
            "Type" : "AWS::Route53::RecordSet",
            "Properties" : {
                "HostedZoneName" : { "Fn::FindInMap": ["CollectorDomainName", {"Ref": "Stage" }, "HostedZoneName"]},
                "Comment" : "CNAME for AWS ELB",
                "Name" :  { "Fn::FindInMap": ["CollectorDomainName", {"Ref": "Stage" }, "DomainName"]},
                "Type" : "A",
                "AliasTarget" : {
                    "HostedZoneId" : { "Fn::GetAtt" : ["CASProxyElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
                    "DNSName" : { "Fn::GetAtt" : ["CASProxyElasticLoadBalancer", "CanonicalHostedZoneName"] }
                }
            }
        }
    },
    "Outputs": {
        "URL" : {
            "Description" : "URL of the content-authorisation-proxy website",
            "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "CASProxyElasticLoadBalancer", "DNSName" ]}]]}
        }
    }
}
